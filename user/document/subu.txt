
subu is short for subservient user. 

A subu is much like any other user.  It has an entry in /etc/passwd, and a home
directory. As for other users this home directory is most likely under /home.
Direct login to the subu might be barred, though that is not necessarly the case.

Each subu has two names.  One is its 'subu_username'.  The other is its
'subuname'.  The subu_username is autogenerated.  When using our tools, one
never needs to know the subu_username. However, the entry in /etc/passwd will be
the generated name, and the home directory will have the generated name.  The
command 'subu-username subuname' will print the subu_username.

Each subu belongs to a master user, known as masteru.  A given masteru may have many
subus. The masteru is a different user than any of the subu's that are
subservient to it. 

Each masteru has a top level subdirectory called 'subuland'.  In this sub
directory the masteru will find all of its subu home directories.  The masteru
will then see all subu owned files in the subuland through the illusion that the
masteru owns them rather than the corresponding subu.  Thus the master may move
files around using a regular file navigator. 

Actually the subus will not appear in subuland until masteru runs the command
'subu-mount'.  This is normally done when masteru logs in.

The masteru may create and delete subus at will.  The masteru may set default
nice values, renice, or kill subu processes.  The masteru may set limits for a
subu.  In fact, the masteru is a bit like root relative to its subus.

There is a control panel that masteru may use.  It has a matrix of rectangles,
where in each rectangle, there is information about each subu's processes and
disk usage.

The masteru may set the subu for each launched process.

---
subu-username <subuname> 

prints the username
returns an error code

---
subu-number

prints a new maximums subu number.
returns an error code

These numbers are used in synthesizing usernames.  Used for testing, should not
appear in any scripts.

---
subu-mount

mounts all of the subus for the given masteru
returns an error code

---
subu-mk-0 <subuname>

primitve makes a new subu
returns an error code

---
subu-rm-0 <subuname>

primitive removes a subu
returns an error code
